Content Discovery

In the content of cyber security, content discovery refers to finding
content such as pages or portals intended for staff usage, older 
versions of the site, back up files, config files, admin panels,
etc. not intended for the public to see or use.

There are three main ways of finding content on a website that we
will cover: manual, automated, and OSINT.

Manual -Robot.txt

The Robot protocol, and its file robots.txt, tells search engines
what pages they can index and show in results to users, and even if
they are allowed to crawl certain pages for indexing. This file gives
us a list of locations the developers may not want us to discover.

Manual - Favicon

Favicon is the website icon used in the browser tab, when websites are
made using frameworks, sometimes the developer can forget to change it,
which allows us to investigate it and get clues as to what framework it
belongs to. A good place to look is 
https://wiki.owasp.org/index.php/OWASP_favicon_database

We can do this by looking at the page's source code to find the favicon
link and get its md5 hash value using curl.

example: curl https://website/page/file.format | md5sum

Manual - Sitemap.xml

Sitemap.xml is a file which lists all the pages the developer wants to
show, but there may be old pages that still work, or parts of the site
difficult to navigate.

Manual - HTTP Headers

When we make requests to servers they send several headers which may
contain valuable info such as server OS and version and scripting
language used. We can see this using curl with the flag -v to view
detailed versbose information

curl http://site -v

Manual - Framework Stack

Once we have located the website's framework via reading the source code
and its comments, or favicon, we can then go to the framework's website
in which we can find more information about the site possibly leading to
the discovery of more content. 

OSINT - Google Hacking/Dorking

We can use Google's search engine in order to curate the results of our
search. The following filters can be combined.

Filter
	Example
	Description
site
	site:tryhackme.com
	returns results only from the specified website address
inurl
	inurl:admin
	returns results that have the specified word in the URL
filetype
	filetype:pdf
	returns results which are a particular file extension
intitle
	intitle:admin
	returns results that contain the specified word in the title

OSINT - Wappalyzer

This is an online tool that can help us find frameworks, content management
systemsl, pay processing systems, version numbers etc.

https://www.wappalyzer.com/

OSINT - The Way Back Machine

Keeps old verions of websites and their respective time periods, it can
be useful to discover old pages that may still operate under the site.

OSINT - Github

You may find some company source code here.

OSINT - S3 Buckets

Service provided by Amazon AWS to host files online, these can be visible or
even wrtitable. The format of the S3 buckets is http(s)://{name}.s3.amazonaws.com
where {name} is decided by the owner, such as tryhackme-assets.s3.amazonaws.com. S3
buckets can be discovered in many ways, such as finding the URLs in the website's
page source, GitHub repositories, or even automating the process. One common
automation method is by using the company name followed by common terms such as
{name}-assets, {name}-www, {name}-public, {name}-private, etc.

Automated Discovery

This process involves using tools such as GoBuster and a wordlist in order to
find directories or files by making brute force requests to the server.


===============================================================
Gobuster v3.5
by OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)
===============================================================
[+] Url:                     http://10.10.255.205
[+] Method:                  GET
[+] Threads:                 10
[+] Wordlist:                /usr/share/wordlists/dirb/common.txt
[+] Negative Status codes:   404
[+] User Agent:              gobuster/3.5
[+] Timeout:                 10s
===============================================================
2023/06/10 11:55:55 Starting gobuster in directory enumeration mode
===============================================================
[2K/assets               (Status: 301) [Size: 178] [--> http://10.10.255.205/assets/]
[2K/contact              (Status: 200) [Size: 3108]
[2K/customers            (Status: 302) [Size: 0] [--> /customers/login]
[2K/development.log      (Status: 200) [Size: 27]
[2K/monthly              (Status: 200) [Size: 28]
[2K/news                 (Status: 200) [Size: 2538]
[2K/private              (Status: 301) [Size: 178] [--> http://10.10.255.205/private/]
[2K/robots.txt           (Status: 200) [Size: 46]
[2K/sitemap.xml          (Status: 200) [Size: 1391]

===============================================================
2023/06/10 11:57:43 Finished
===============================================================
